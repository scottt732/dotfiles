#!/bin/bash
set -e
set -o pipefail

dirname=$(dirname "$0")
current_branch=$(git branch --show-current)

function get_parent {
    current_branch="$1"
    if [[ "${current_branch}" == "dev" ]]; then
        echo "staging"
    elif [[ "${current_branch}" == "staging" ]]; then
        echo "prod"
    elif [[ "${current_branch}" == "prod" ]]; then
        >&2 echo "Prod has no parent"
        exit 1
    else
        echo `git show-branch 2>&1 | grep '*' | grep -v "$(git rev-parse --abbrev-ref HEAD)" | head -n1 | sed 's/.*\[\(.*\)\].*/\1/' | sed 's/[\^~].*//'`

    fi
}

echo "dirname: ${dirname}"
echo "current branch: ${current_branch}"

parent="$1"
if [ -z "$parent" ]; then
    echo "looking for parent"
    parent=$(get_parent "${current_branch:?}")
fi

while [ -z "$parent" ]; do
    read -p "Couldn't find parent branch. Is it dev (y/n)?" choice
    case "$choice" in
      y|Y )
        parent=dev
        ;;
      * )
        ;;
    esac
done


echo "parent: ${parent}"
if [[ "${current_branch}" =~ ^dev|staging|prod|main|master$ ]]; then
    >&2 echo "Refusing to squash ${current_branch} branch"
    exit 1
fi

echo "Squash current branch ${current_branch} (parent=$parent)"

read -p "Continue (y/n)?" choice
case "$choice" in
  y|Y )
    git fetch origin "$parent" > /dev/null
    git reset --soft "$parent" > /dev/null
    git add :/
    echo "Commit and force push to complete."
    ;;
  * )
    exit 1
    ;;
esac
